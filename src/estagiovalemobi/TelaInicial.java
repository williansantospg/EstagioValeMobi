/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package estagiovalemobi;

import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import utilitarios.conexao;

/**
 *
 * @author Wilian
 */
public class TelaInicial extends javax.swing.JFrame {

    conexao con_Estoque;
    String CodigoDoProduto = "0", tipoNegocio = "todos", codigoTabela = "0";
    Double PrecoProduto = 0.00;

    /**
     * Creates new form NewJFrame
     */
    public TelaInicial() {
        initComponents();
        setResizable(false);

        con_Estoque = new conexao();//iniciando a classe conexão
        con_Estoque.conecta();//chamando a classe conexão

        con_Estoque.executeSQL("select * from Estoque");
        preencherTabela();
        jButtonExcluir.setEnabled(false);//iniciando o formulario com o botão bloqueado
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonGroupTabela = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxAcao = new javax.swing.JComboBox();
        jTextFieldTipo = new javax.swing.JTextField();
        jTextFieldQuantidade = new javax.swing.JTextField();
        jTextFieldPreco = new javax.swing.JTextField();
        jLabelCodigo = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButtonSalvar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableProdutos = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jRadioButtonTodos = new javax.swing.JRadioButton();
        jRadioButtonCompra = new javax.swing.JRadioButton();
        jRadioButtonVenda = new javax.swing.JRadioButton();
        jButtonLimpar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabelTotal = new javax.swing.JLabel();
        jButtonExcluir = new javax.swing.JButton();
        jTextFieldNome = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Estágio ValeMobi");

        jLabel1.setText("Código:");

        jLabel2.setText("Produto:");

        jLabel3.setText("Tipo:");

        jLabel4.setText("Quantidade:");

        jLabel5.setText("Preço:");

        jLabel6.setText("Ação:");

        jComboBoxAcao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione", "Compra", "Venda" }));
        jComboBoxAcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAcaoActionPerformed(evt);
            }
        });

        jTextFieldTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTipoActionPerformed(evt);
            }
        });

        jTextFieldQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldQuantidadeActionPerformed(evt);
            }
        });
        jTextFieldQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldQuantidadeKeyReleased(evt);
            }
        });

        jTextFieldPreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPrecoActionPerformed(evt);
            }
        });
        jTextFieldPreco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPrecoKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel8.setText("Sistema de compra e venda");

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jTableProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Nome", "Tipo", "Qtdd", "Preço", "Ação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableProdutosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableProdutos);
        if (jTableProdutos.getColumnModel().getColumnCount() > 0) {
            jTableProdutos.getColumnModel().getColumn(0).setMinWidth(60);
            jTableProdutos.getColumnModel().getColumn(0).setPreferredWidth(60);
            jTableProdutos.getColumnModel().getColumn(0).setMaxWidth(60);
            jTableProdutos.getColumnModel().getColumn(1).setMinWidth(250);
            jTableProdutos.getColumnModel().getColumn(1).setPreferredWidth(250);
            jTableProdutos.getColumnModel().getColumn(1).setMaxWidth(250);
            jTableProdutos.getColumnModel().getColumn(2).setMinWidth(130);
            jTableProdutos.getColumnModel().getColumn(2).setPreferredWidth(130);
            jTableProdutos.getColumnModel().getColumn(2).setMaxWidth(130);
            jTableProdutos.getColumnModel().getColumn(3).setMinWidth(45);
            jTableProdutos.getColumnModel().getColumn(3).setPreferredWidth(45);
            jTableProdutos.getColumnModel().getColumn(3).setMaxWidth(45);
            jTableProdutos.getColumnModel().getColumn(4).setMinWidth(90);
            jTableProdutos.getColumnModel().getColumn(4).setPreferredWidth(90);
            jTableProdutos.getColumnModel().getColumn(4).setMaxWidth(90);
            jTableProdutos.getColumnModel().getColumn(5).setMinWidth(120);
            jTableProdutos.getColumnModel().getColumn(5).setPreferredWidth(120);
            jTableProdutos.getColumnModel().getColumn(5).setMaxWidth(120);
        }

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecione um tipo de consulta"));
        jPanel1.setToolTipText("Consulta geral");

        buttonGroupTabela.add(jRadioButtonTodos);
        jRadioButtonTodos.setSelected(true);
        jRadioButtonTodos.setText("Todos");
        jRadioButtonTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonTodosActionPerformed(evt);
            }
        });

        buttonGroupTabela.add(jRadioButtonCompra);
        jRadioButtonCompra.setText("Compra");
        jRadioButtonCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonCompraActionPerformed(evt);
            }
        });

        buttonGroupTabela.add(jRadioButtonVenda);
        jRadioButtonVenda.setText("Venda");
        jRadioButtonVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonVendaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRadioButtonTodos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonCompra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonVenda))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonTodos)
                    .addComponent(jRadioButtonCompra)
                    .addComponent(jRadioButtonVenda)))
        );

        jButtonLimpar.setText("Limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        jLabel7.setText("Total de itens:");

        jLabelTotal.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jTextFieldNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextFieldPreco, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldQuantidade, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jTextFieldTipo, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                                .addComponent(jTextFieldNome))
                            .addGap(93, 93, 93))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(195, 195, 195)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jButtonSalvar)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jButtonLimpar)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButtonExcluir))))
                                .addComponent(jLabel8)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(8, 8, 8)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabelCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jComboBoxAcao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(190, 190, 190))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxAcao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonLimpar)
                    .addComponent(jButtonExcluir))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel1.getAccessibleContext().setAccessibleName("Selecione um tipo de consulta");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTipoActionPerformed

    private void jTextFieldPrecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPrecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPrecoActionPerformed

    private void jRadioButtonCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonCompraActionPerformed
        con_Estoque.executeSQL("select * from ESTOQUE where tipoNegocio = 'Compra'");
        preencherTabela();
        limparDados();
    }//GEN-LAST:event_jRadioButtonCompraActionPerformed

    private void jTextFieldPrecoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPrecoKeyReleased
        jTextFieldPreco.setText(jTextFieldPreco.getText().replaceAll("[^0-9|^,]", ""));//aceita só numeros
    }//GEN-LAST:event_jTextFieldPrecoKeyReleased

    private void jTextFieldQuantidadeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeKeyReleased
        jTextFieldQuantidade.setText(jTextFieldQuantidade.getText().replaceAll("[^0-9]", ""));//aceita só numeros       
    }//GEN-LAST:event_jTextFieldQuantidadeKeyReleased

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        String codigo = jLabelCodigo.getText();

        if (codigo.equals("") || jLabelCodigo.getText().isEmpty()) {
            if (jComboBoxAcao.getSelectedItem().equals("Selecione")) {
                JOptionPane.showMessageDialog(null, "Selecione uma ação", "Erro...", JOptionPane.ERROR_MESSAGE);
                jComboBoxAcao.setBorder(new LineBorder(Color.red, 2));
                jComboBoxAcao.requestFocus();

            } else if (jTextFieldNome.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Insira um Produto", "Erro...", JOptionPane.ERROR_MESSAGE);
                jTextFieldNome.setBorder(new LineBorder(Color.red, 2));
                jTextFieldNome.setBackground(Color.YELLOW);
                jTextFieldNome.requestFocus();//iniciando o formulario com foco no campo destino

            } else if (jTextFieldTipo.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Insira um tipo de produto", "Erro...", JOptionPane.ERROR_MESSAGE);
                jTextFieldTipo.setBorder(new LineBorder(Color.red, 2));
                jTextFieldTipo.setBackground(Color.YELLOW);
                jTextFieldTipo.requestFocus();//iniciando o formulario com foco no campo destino

            } else if (jTextFieldQuantidade.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Insira a quantidade do produto", "Erro...", JOptionPane.ERROR_MESSAGE);
                jTextFieldQuantidade.setBorder(new LineBorder(Color.red, 2));
                jTextFieldQuantidade.setBackground(Color.YELLOW);
                jTextFieldQuantidade.requestFocus();//iniciando o formulario com foco no campo destino

            } else if (jTextFieldPreco.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Insira o preco do produto", "Erro...", JOptionPane.ERROR_MESSAGE);
                jTextFieldPreco.setBorder(new LineBorder(Color.red, 2));
                jTextFieldPreco.setBackground(Color.YELLOW);
                jTextFieldPreco.requestFocus();//iniciando o formulario com foco no campo destino

            } else {
                insereDados();
            }
        } else {
                if (jComboBoxAcao.getSelectedItem().equals("Selecione")) {
                    JOptionPane.showMessageDialog(null, "Selecione uma ação", "Erro...", JOptionPane.ERROR_MESSAGE);
                    jComboBoxAcao.setBorder(new LineBorder(Color.red, 2));
                    jComboBoxAcao.requestFocus();

                } else if (jTextFieldNome.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Insira um Produto", "Erro...", JOptionPane.ERROR_MESSAGE);
                    jTextFieldNome.setBorder(new LineBorder(Color.red, 2));
                    jTextFieldNome.setBackground(Color.YELLOW);
                    jTextFieldNome.requestFocus();//iniciando o formulario com foco no campo destino

                } else if (jTextFieldTipo.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Insira um tipo de produto", "Erro...", JOptionPane.ERROR_MESSAGE);
                    jTextFieldTipo.setBorder(new LineBorder(Color.red, 2));
                    jTextFieldTipo.setBackground(Color.YELLOW);
                    jTextFieldTipo.requestFocus();//iniciando o formulario com foco no campo destino

                } else if (jTextFieldQuantidade.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Insira a quantidade do produto", "Erro...", JOptionPane.ERROR_MESSAGE);
                    jTextFieldQuantidade.setBorder(new LineBorder(Color.red, 2));
                    jTextFieldQuantidade.setBackground(Color.YELLOW);
                    jTextFieldQuantidade.requestFocus();//iniciando o formulario com foco no campo destino

                } else if (jTextFieldPreco.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Insira o preco do produto", "Erro...", JOptionPane.ERROR_MESSAGE);
                    jTextFieldPreco.setBorder(new LineBorder(Color.red, 2));
                    jTextFieldPreco.setBackground(Color.YELLOW);
                    jTextFieldPreco.requestFocus();//iniciando o formulario com foco no campo destino

                } else {
                    atualizaDados();
                }
        }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jComboBoxAcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAcaoActionPerformed

    }//GEN-LAST:event_jComboBoxAcaoActionPerformed

    private void jRadioButtonTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonTodosActionPerformed
        con_Estoque.executeSQL("select * from Estoque");
        preencherTabela();
        limparDados();
    }//GEN-LAST:event_jRadioButtonTodosActionPerformed

    private void jRadioButtonVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonVendaActionPerformed
        con_Estoque.executeSQL("select * from ESTOQUE where tipoNegocio = 'Venda'");
        preencherTabela();
        limparDados();
    }//GEN-LAST:event_jRadioButtonVendaActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        limparDados();
    }//GEN-LAST:event_jButtonLimparActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
     // procedimento para exluir dados
        try {
            String sql = "select * from Estoque where codigoProduto = " + codigoTabela;//tf_codigo.getText();
            con_Estoque.executeSQL(sql);
            con_Estoque.resultset.first();
            String nome = "Deseja deletar o produto: " + con_Estoque.resultset.getString("nomeProduto") + " ?";
            int opcao_escolhida = JOptionPane.showOptionDialog(null, nome, "Exclusão",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE, null, new String[]{"Sim", "Não"}, "Não");
            
            if (opcao_escolhida == JOptionPane.YES_OPTION) {
                sql = "DELETE FROM Estoque Where codigoProduto =" + codigoTabela;//tf_codigo.getText();
                int conseguiu_excluir = con_Estoque.statement.executeUpdate(sql);
                if (conseguiu_excluir == 1) {
                    JOptionPane.showMessageDialog(null, "Exclusão realizada com sucesso!", "Arquivo excluido", JOptionPane.INFORMATION_MESSAGE);
                    limparDados();
                    con_Estoque.executeSQL("Select * from Estoque");
                    jButtonExcluir.setEnabled(false);//iniciando o formulario com o botão bloqueado
                    preencherTabela();
                }
            } else {
                return;
            }
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro ao tentar excluir o registro..." + erro, "ERRO...", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jTextFieldNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomeActionPerformed

    private void jTextFieldQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldQuantidadeActionPerformed

    private void jTableProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProdutosMouseClicked
        selecionarDados();
    }//GEN-LAST:event_jTableProdutosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaInicial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupTabela;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox jComboBoxAcao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelCodigo;
    private javax.swing.JLabel jLabelTotal;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButtonCompra;
    private javax.swing.JRadioButton jRadioButtonTodos;
    private javax.swing.JRadioButton jRadioButtonVenda;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableProdutos;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldPreco;
    private javax.swing.JTextField jTextFieldQuantidade;
    private javax.swing.JTextField jTextFieldTipo;
    // End of variables declaration//GEN-END:variables

    private void insereDados() {

        try {
            //transformarPrecoProdutoDouble
            PrecoProduto = Double.parseDouble(jTextFieldPreco.getText().replace(",", "."));
            String sqlinsert = "insert into ESTOQUE "
                    + "(NomeProduto,tipoProduto,QtddProduto,precoProduto,TipoNegocio)"
                    + "VALUES (?,?,?,?,?)";
            PreparedStatement ps = con_Estoque.conexao.prepareStatement(sqlinsert);
            ps.setString(1, jTextFieldNome.getText());
            ps.setString(2, jTextFieldTipo.getText());
            ps.setInt(3, new Integer(jTextFieldQuantidade.getText()));
            ps.setDouble(4, PrecoProduto);
            ps.setObject(5, jComboBoxAcao.getSelectedItem());
            ps.executeUpdate();

            String nome = jTextFieldNome.getText();
            String preco = jTextFieldPreco.getText();
            JOptionPane.showMessageDialog(null, "Produto " + nome + " no valor de: " + preco + " inserido com sucesso!", "Cadastro de Produtos", JOptionPane.INFORMATION_MESSAGE);
            limparDados();
            con_Estoque.executeSQL("Select * from ESTOQUE");
            preencherTabela();

        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro ao tentar gravar o registro " + erro, "Erro...", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void atualizaDados() {

        try {
            PrecoProduto = Double.parseDouble(jTextFieldPreco.getText().replace(",", "."));
            String sqlUpDate = "UPDATE Estoque SET "
                    + "nomeProduto=?,tipoProduto=?,qtddProduto=?,precoProduto=?,tipoNegocio=? WHERE codigoProduto =?";

            PreparedStatement psU = con_Estoque.conexao.prepareStatement(sqlUpDate);
            psU.setString(1, jTextFieldNome.getText());
            psU.setString(2, jTextFieldTipo.getText());
            psU.setInt(3, new Integer(jTextFieldQuantidade.getText()));
            psU.setDouble(4, PrecoProduto);
            psU.setObject(5, jComboBoxAcao.getSelectedItem());
            psU.setInt(6, new Integer(jLabelCodigo.getText()));
            psU.executeUpdate();

            String nome = jTextFieldNome.getText();
            String preco = jTextFieldPreco.getText();
            JOptionPane.showMessageDialog(null, "Produto " + nome + " no valor de: " + preco + " atualizado com sucesso!", "Atualização de Produtos", JOptionPane.INFORMATION_MESSAGE);
            limparDados();
            con_Estoque.executeSQL("Select * from ESTOQUE");
            preencherTabela();

        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro ao tentar atualizar o registro...\n" + erro, "ERRO...", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void limparDados() {
        jLabelCodigo.setText("");
        jTextFieldNome.setText("");
        jTextFieldNome.setBorder(javax.swing.BorderFactory.createEtchedBorder());//deixa a borda do jtextField normal
        jTextFieldNome.setBackground(Color.WHITE); //selecionando a cor de fundo do tf
        jTextFieldTipo.setText("");
        jTextFieldTipo.setBorder(javax.swing.BorderFactory.createEtchedBorder());//deixa a borda do jtextField normal
        jTextFieldTipo.setBackground(Color.WHITE); //selecionando a cor de fundo do tf
        jTextFieldQuantidade.setText("");
        jTextFieldQuantidade.setBorder(javax.swing.BorderFactory.createEtchedBorder());//deixa a borda do jtextField normal
        jTextFieldQuantidade.setBackground(Color.WHITE); //selecionando a cor de fundo do tf
        jTextFieldPreco.setText("");
        jTextFieldPreco.setBorder(javax.swing.BorderFactory.createEtchedBorder());//deixa a borda do jtextField normal
        jTextFieldPreco.setBackground(Color.WHITE); //selecionando a cor de fundo do tf
        jComboBoxAcao.setSelectedItem("Selecione");
        jComboBoxAcao.setBorder(javax.swing.BorderFactory.createEtchedBorder());//deixa a borda do jtextField normal
        jButtonExcluir.setEnabled(false);//iniciando o formulario com o botão bloqueado

    }

    public void preencherTabela() {
        jTableProdutos.getColumnModel().getColumn(0).setPreferredWidth(60);  // conecta dados a tabela e config. tabela pra tamanho 20
        jTableProdutos.getColumnModel().getColumn(1).setPreferredWidth(250); // conecta dados a tabela e config. tabela pra tamanho 150
        jTableProdutos.getColumnModel().getColumn(2).setPreferredWidth(130);
        jTableProdutos.getColumnModel().getColumn(3).setPreferredWidth(35);
        jTableProdutos.getColumnModel().getColumn(4).setPreferredWidth(100);
        jTableProdutos.getColumnModel().getColumn(5).setPreferredWidth(120);

        DefaultTableModel modelo = (DefaultTableModel) jTableProdutos.getModel();// modo de conectar a tabela
        modelo.setNumRows(0);// iniciando tabela em branco caso nao tenha dados      
        try {
            while (con_Estoque.resultset.next())// enquanto tiver dados
            {
                modelo.addRow(new Object[]{
                    con_Estoque.resultset.getString("codigoProduto"),
                    con_Estoque.resultset.getString("nomeProduto"),
                    con_Estoque.resultset.getString("tipoProduto"),
                    con_Estoque.resultset.getString("qtddproduto"),
                    con_Estoque.resultset.getString("precoProduto"),
                    con_Estoque.resultset.getString("tipoNegocio"),});
            }
            con_Estoque.executeSQL("select * from Estoque");
            mensagemParaConsulta();
            CalculaTotalProdutosVendidos();

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Erro na tabela\n" + erro, "ERRO...", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void mensagemParaConsulta() {
        int colunas = jTableProdutos.getRowCount();//contar linhas da tabela  
        if (colunas < 1) {
            JOptionPane.showMessageDialog(null, "Não há dados para apresentar", "Atenção...", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void CalculaTotalProdutosVendidos() {

        int total = 0;
        String valor;
        int colunas = jTableProdutos.getRowCount();
        for (int i = 0; i < colunas; i++) {
            valor = String.valueOf(jTableProdutos.getValueAt(i, 3));
            int Quantidade = Integer.parseInt(valor);
            int totalQuantidade = Quantidade;
            total += totalQuantidade;

        }
        jLabelTotal.setText("" + total);

    }

    private void selecionarDados() {

        try {
            int texto_selecionado = jTableProdutos.getSelectedRow();//pega  a linha
            codigoTabela = (jTableProdutos.getValueAt(texto_selecionado, 0).toString());//selecionando o campo
            String sql = "select * from  Estoque Where codigoProduto = '" + codigoTabela + "'";
            con_Estoque.executeSQL(sql);
            con_Estoque.resultset.first();
            jButtonExcluir.setEnabled(true);
             
            jLabelCodigo.setText(con_Estoque.resultset.getString("codigoProduto"));
            jTextFieldTipo.setText(con_Estoque.resultset.getString("tipoProduto"));
            jTextFieldQuantidade.setText(con_Estoque.resultset.getString("qtddProduto"));
            jTextFieldPreco.setText(con_Estoque.resultset.getString("precoProduto"));
            jComboBoxAcao.setSelectedItem(con_Estoque.resultset.getString("tipoNegocio"));
            jTextFieldNome.setText(con_Estoque.resultset.getString("nomeProduto"));
           
            
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Dados não localizados\n " + erro, "Método selecionarDados", JOptionPane.ERROR_MESSAGE);
        }
    }
}
